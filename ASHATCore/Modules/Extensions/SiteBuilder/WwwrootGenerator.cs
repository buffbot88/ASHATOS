using System.Diagnostics.Eventing.Reader;
using System.IO;

namespace ASHATCore.Modules.Extensions.SiteBuilder;

/// <summary>
/// Generates wwwroot directory and control panel files for ASHATCore server.
/// </summary>
public class WwwrootGenerator
{
    private const string InitLogMessage = "Initializing (SiteBuilder)...";
    private readonly SiteBuilderModule _module;
    private readonly string _wwwrootPath;

    public WwwrootGenerator(SiteBuilderModule module, string wwwrootPath)
    {
        _module = module ?? throw new ArgumentNullException(nameof(module));
        _wwwrootPath = wwwrootPath ?? throw new ArgumentNullException(nameof(wwwrootPath));
    }

    public SiteBuilderModule GetModule() => _module;

    public string GenerateWwwroot()
    {
        try
        {
            // Create wwwroot directory (for config files only, no static HTML)
            DirectoryInfo wwwrootDirectory = Directory.CreateDirectory(_wwwrootPath);

            // Create config subdirectory for server Configuration files
            var configPath = Path.Combine(_wwwrootPath, "config");
            Directory.CreateDirectory(configPath);

            // NO HTML Generation - all UI is served dynamically through internal routing
            // The (SiteBuilder) serves everything dynamically via ASHATOS

            // Generate server Configuration files (optional for Linux environments)
            // On Windows 11, Kestrel is the only supported webserver
            if (!OperatingSystem.IsWindows())
            {
                GenerateNginxConfig(configPath);
                GenerateApacheConfig(configPath);
                GeneratePhpIni(configPath);
            }
            else
            {
                _module.Log("Skipping Apache/Nginx config Generation on Windows (Kestrel is used)");
            }

            _module.Log($"‚úÖ (SiteBuilder) initialized at: {_wwwrootPath}");

            var configFiles = OperatingSystem.IsWindows()
                ? "  - No external Configuration files needed (Kestrel webserver)"
                : @"  - config/nginx.conf
  - config/apache.conf
  - config/php.ini";

            return $@"‚úÖ (SiteBuilder) initialized successfully!

üìÅ Location: {_wwwrootPath}

üîí SECURITY: All UI features are served dynamically through internal ASHATOS routing
   - No static HTML files Generated
   - No external file access
   - All features accessed via (SiteBuilder module)

Available UI routes (dynamic, internal):
  - /login - Login interface
  - /control-panel - Main control panel
  - /admin - Administrative dashboard
  - /gameengine-dashboard - Game engine management
  - /clientbuilder-dashboard - Client builder interface

Configuration files:
{configFiles}

Note: {(OperatingSystem.IsWindows() ? "On Windows, ASHATCore uses Kestrel webserver (no external webserver needed)" : "Server Configuration files Generated for Linux environments")}";
        }
        catch (Exception ex)
        {
            _module.Log($"SiteBuilder initialization failed: {ex.Message}", "ERROR");
            return $"‚ùå Error: {ex.Message}";
        }
    }

    private void GenerateNginxConfig(string configPath)
    {
        var cmsPath = _wwwrootPath;
        var content = $@"# Nginx Configuration for ASHATCore CMS Suite
# Generated by ASHATCore WwwrootGenerator
# Place this file in your Nginx sites-available directory

server {{
    listen 80;
    server_name localhost;
    root ""{cmsPath}"";
    index index.php index.html index.htm;
    
    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml+rss application/json;
    
    location / {{
        try_files $uri $uri/ /index.php?$query_string;
    }}
    
    # PHP processing
    location ~ \.php$ {{
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass 127.0.0.1:9000;  # For PHP-FPM
        # fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;  # Alternative socket-based
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;

        # PHP settings
        fastcgi_buffer_size 128k;
        fastcgi_buffers 256 16k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_temp_file_write_size 256k;
        fastcgi_read_timeout 240;
    }}
    
    # Control Panel
    location /control {{
        try_files $uri $uri/ /control/index.php?$query_string;
    }}
    
    # Static files caching
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {{
        expires 1y;
        add_header Cache-Control ""public, immutable"";
        access_log off;
    }}
    
    # Deny access to sensitive files
    location ~ /\.ht {{
        deny all;
    }}
    
    location ~ /\.git {{
        deny all;
    }}
    
    location ~ /(config|includes|vendor)/ {{
        deny all;
    }}
    
    # Logging
    access_log /var/log/nginx/ASHATCore_access.log;
    error_log /var/log/nginx/ASHATCore_error.log;
}}
";
        File.WriteAllText(Path.Combine(configPath, "nginx.conf"), content);
        _module.Log("Generated config/nginx.conf");
    }

    private void GenerateApacheConfig(string configPath)
    {
        var cmsPath = _wwwrootPath;
        var content = $@"# Apache Configuration for ASHATCore CMS Suite
# Generated by ASHATCore WwwrootGenerator
# Place this file in your Apache sites-available directory
# Enable with: a2ensite ASHATCore.conf && systemctl reload apache2

<VirtualHost *:80>
    ServerName localhost
    ServerAdmin admin@localhost
    DocumentRoot ""{cmsPath}""
    
    <Directory ""{cmsPath}"">
        Options -Indexes +FollowSymLinks +MultiViews
        AllowOverride All
        Require all granted
        
        # Enable mod_rewrite for pretty URLs
        <IfModule mod_rewrite.c>
            RewriteEngine On
            RewriteBase /
            
            # Redirect to index.php if file/directory doesn't exist
            RewriteCond %{{REQUEST_FILENAME}} !-f
            RewriteCond %{{REQUEST_FILENAME}} !-d
            RewriteRule ^(.*)$ index.php?$1 [L,QSA]
        </IfModule>
    </Directory>
    
    # PHP Settings
    <IfModule mod_php8.c>
        php_value upload_max_filesize 50M
        php_value post_max_size 50M
        php_value memory_limit 256M
        php_value max_execution_time 300
        php_value max_input_time 300
    </IfModule>
    
    # Enable PHP-FPM if using it
    <FilesMatch \.php$>
        SetHandler ""proxy:unix:/var/run/php/php8.1-fpm.sock|fcgi://localhost/""
    </FilesMatch>
    
    # Security Headers
    <IfModule mod_headers.c>
        Header set X-Content-Type-Options ""nosniff""
        Header set X-Frame-Options ""SAMEORIGIN""
        Header set X-XSS-Protection ""1; mode=block""
        Header set Referrer-Policy ""no-referrer-when-downgrade""
    </IfModule>
    
    # Enable compression
    <IfModule mod_deflate.c>
        AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css text/javascript application/javascript application/json
    </IfModule>
    
    # Static file caching
    <IfModule mod_expires.c>
        ExpiresActive On
        ExpiresByType image/jpeg ""access plus 1 year""
        ExpiresByType image/png ""access plus 1 year""
        ExpiresByType image/gif ""access plus 1 year""
        ExpiresByType image/svg+xml ""access plus 1 year""
        ExpiresByType text/css ""access plus 1 year""
        ExpiresByType text/javascript ""access plus 1 year""
        ExpiresByType application/javascript ""access plus 1 year""
        ExpiresByType font/woff ""access plus 1 year""
        ExpiresByType font/woff2 ""access plus 1 year""
    </IfModule>
    
    # Deny access to sensitive files and directories
    <DirectoryMatch ""/(\.git|\.svn|config|includes|vendor)"">
        Require all denied
    </DirectoryMatch>
    
    <FilesMatch ""(\.htaccess|\.htpasswd|\.env|\.git.*|composer\.(json|lock))"">
        Require all denied
    </FilesMatch>
    
    # Logging
    ErrorLog ${{APACHE_LOG_DIR}}/ASHATCore_error.log
    CustomLog ${{APACHE_LOG_DIR}}/ASHATCore_access.log combined
</VirtualHost>

# SSL Configuration (uncomment and configure for HTTPS)
# <VirtualHost *:443>
#     ServerName localhost
#     ServerAdmin admin@localhost
#     DocumentRoot ""{cmsPath}""
#     
#     SSLEngine on
#     SSLCertificateFile /path/to/cert.pem
#     SSLCertificateKeyFile /path/to/key.pem
#     
#     # Include same directives as above
# </VirtualHost>
";
        File.WriteAllText(Path.Combine(configPath, "apache.conf"), content);
        _module.Log("Generated config/apache.conf");
    }

    private void GeneratePhpIni(string configPath)
    {
        var content = @"; PHP Configuration for ASHATCore CMS Suite
; Generated by ASHATCore WwwrootGenerator
; Place this file in your PHP Configuration directory or use with -c flag

[PHP]
; ... (rest of config unchanged) ...
";
        File.WriteAllText(Path.Combine(configPath, "php.ini"), content);
        _module.Log("Generated config/php.ini");
    }
}