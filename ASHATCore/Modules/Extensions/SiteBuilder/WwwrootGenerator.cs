using System.Diagnostics.Eventing.Reader;
using System.IO;

namespace ASHATCore.Modules.Extensions.SiteBuilder;

/// <summary>
/// Generates wwwroot directory and control panel files for ASHATCore server.
/// </summary>
public class WwwrootGenerator
{
    private const string InitLogMessage = "Initializing (SiteBuilder)...";
    private readonly SiteBuilderModule _module;
    private readonly string _wwwrootPath;

    public WwwrootGenerator(SiteBuilderModule module, string wwwrootPath)
    {
        _module = module ?? throw new ArgumentNullException(nameof(module));
        _wwwrootPath = wwwrootPath ?? throw new ArgumentNullException(nameof(wwwrootPath));
    }

    public SiteBuilderModule GetModule() => _module;

    public string GenerateWwwroot()
    {
        try
        {
            // Create wwwroot directory (for config files only, no static HTML)
            DirectoryInfo wwwrootDirectory = Directory.CreateDirectory(_wwwrootPath);

            // Create config subdirectory for server Configuration files
            var configPath = Path.Combine(_wwwrootPath, "config");
            Directory.CreateDirectory(configPath);

            // NO HTML Generation - all UI is served dynamically through internal routing
            // The (SiteBuilder) serves everything dynamically via ASHATOS

            // Generate server Configuration files (optional for Linux environments)
            // On Windows 11, Kestrel is the only supported webserver
            // Note: PHP configuration removed - LegendaryCMS is pure .NET (uses Razor/Blazor)
            if (!OperatingSystem.IsWindows())
            {
                GenerateNginxConfig(configPath);
                GenerateApacheConfig(configPath);
                // PHP configuration removed - no longer needed in pure .NET architecture
            }
            else
            {
                _module.Log("Skipping Apache/Nginx config Generation on Windows (Kestrel is used)");
            }

            _module.Log($"‚úÖ (SiteBuilder) initialized at: {_wwwrootPath}");

            var configFiles = OperatingSystem.IsWindows()
                ? "  - No external Configuration files needed (Kestrel webserver)"
                : @"  - config/nginx.conf
  - config/apache.conf";

            return $@"‚úÖ (SiteBuilder) initialized successfully!

üìÅ Location: {_wwwrootPath}

üîí SECURITY: All UI features are served dynamically through internal ASHATOS routing
   - No static HTML files Generated
   - No external file access
   - All features accessed via (SiteBuilder module)

Available UI routes (dynamic, internal):
  - /login - Login interface
  - /control-panel - Main control panel
  - /admin - Administrative dashboard
  - /gameengine-dashboard - Game engine management
  - /clientbuilder-dashboard - Client builder interface
  - /cms/forums - Forum system (Razor Pages)
  - /cms/blogs - Blog system (Razor Pages)
  - /cms/profiles - User profiles (Razor Pages)

Configuration files:
{configFiles}

Note: {(OperatingSystem.IsWindows() ? "On Windows, ASHATCore uses Kestrel webserver (no external webserver needed)" : "Server Configuration files Generated for Linux environments")}
LegendaryCMS uses pure .NET (Razor Pages/Blazor) - no PHP required";
        }
        catch (Exception ex)
        {
            _module.Log($"SiteBuilder initialization failed: {ex.Message}", "ERROR");
            return $"‚ùå Error: {ex.Message}";
        }
    }

    private void GenerateNginxConfig(string configPath)
    {
        var cmsPath = _wwwrootPath;
        var content = $@"# Nginx Configuration for ASHATCore CMS Suite
# Generated by ASHATCore WwwrootGenerator
# Place this file in your Nginx sites-available directory
# Note: LegendaryCMS uses pure .NET (Razor/Blazor) - no PHP/FastCGI needed

server {{
    listen 80;
    server_name localhost;
    root ""{cmsPath}"";
    
    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml+rss application/json;
    
    # Proxy all requests to Kestrel (ASHATCore internal webserver)
    location / {{
        proxy_pass http://localhost:7077;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection keep-alive;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }}
    
    # WebSocket support for ASHATOS
    location /ws {{
        proxy_pass http://localhost:7077;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection ""upgrade"";
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }}
    
    # Deny access to sensitive files
    location ~ /\.ht {{
        deny all;
    }}
    
    location ~ /\.git {{
        deny all;
    }}
    
    location ~ /(config|includes|vendor)/ {{
        deny all;
    }}
    
    # Logging
    access_log /var/log/nginx/ASHATCore_access.log;
    error_log /var/log/nginx/ASHATCore_error.log;
}}
";
        File.WriteAllText(Path.Combine(configPath, "nginx.conf"), content);
        _module.Log("Generated config/nginx.conf (pure .NET reverse proxy)");
    }

    private void GenerateApacheConfig(string configPath)
    {
        var cmsPath = _wwwrootPath;
        var content = $@"# Apache Configuration for ASHATCore CMS Suite
# Generated by ASHATCore WwwrootGenerator
# Place this file in your Apache sites-available directory
# Enable with: a2ensite ASHATCore.conf && systemctl reload apache2
# Note: LegendaryCMS uses pure .NET (Razor/Blazor) - no PHP needed
# This config proxies requests to Kestrel webserver

<VirtualHost *:80>
    ServerName localhost
    ServerAdmin admin@localhost
    DocumentRoot ""{cmsPath}""
    
    # Proxy all requests to Kestrel (ASHATCore internal webserver)
    ProxyPreserveHost On
    ProxyPass / http://localhost:7077/
    ProxyPassReverse / http://localhost:7077/
    
    # WebSocket support
    RewriteEngine On
    RewriteCond %{{HTTP:Upgrade}} =websocket [NC]
    RewriteRule /(.*)           ws://localhost:7077/$1 [P,L]
    
    # Security Headers
    <IfModule mod_headers.c>
        Header set X-Content-Type-Options ""nosniff""
        Header set X-Frame-Options ""SAMEORIGIN""
        Header set X-XSS-Protection ""1; mode=block""
        Header set Referrer-Policy ""no-referrer-when-downgrade""
    </IfModule>
    
    # Deny access to sensitive files and directories
    <DirectoryMatch ""/(\.git|\.svn|config|includes|vendor)"">
        Require all denied
    </DirectoryMatch>
    
    <FilesMatch ""(\.htaccess|\.htpasswd|\.env|\.git.*|composer\.(json|lock))"">
        Require all denied
    </FilesMatch>
    
    # Logging
    ErrorLog ${{APACHE_LOG_DIR}}/ASHATCore_error.log
    CustomLog ${{APACHE_LOG_DIR}}/ASHATCore_access.log combined
</VirtualHost>

# SSL Configuration (uncomment and configure for HTTPS)
# <VirtualHost *:443>
#     ServerName localhost
#     ServerAdmin admin@localhost
#     
#     ProxyPreserveHost On
#     ProxyPass / http://localhost:7077/
#     ProxyPassReverse / http://localhost:7077/
#     
#     SSLEngine on
#     SSLCertificateFile /path/to/cert.pem
#     SSLCertificateKeyFile /path/to/key.pem
# </VirtualHost>
";
        File.WriteAllText(Path.Combine(configPath, "apache.conf"), content);
        _module.Log("Generated config/apache.conf (pure .NET reverse proxy)");
    }
}