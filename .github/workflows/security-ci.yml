name: Security CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 0 * * 0'  # Weekly security scan on Sundays

permissions:
  contents: read

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      
      - name: Restore dependencies
        run: dotnet restore
      
      - name: Build
        run: dotnet build --configuration Release --no-restore
      
      - name: Run tests
        run: dotnet test --no-build --configuration Release --verbosity normal
      
      - name: Check for vulnerabilities
        run: dotnet list package --vulnerable --include-transitive

  codeql-analysis:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: csharp
          queries: security-extended
      
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3
      
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:csharp"

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    permissions:
      contents: read
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate

  secret-scanning:
    name: Secret Scanning
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: TruffleHog Secret Scan
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --only-verified

  security-audit:
    name: Security Audit Summary
    runs-on: ubuntu-latest
    needs: [build-and-test, codeql-analysis, secret-scanning]
    if: always()
    
    steps:
      - name: Check job results
        run: |
          echo "Build and Test: ${{ needs.build-and-test.result }}"
          echo "CodeQL Analysis: ${{ needs.codeql-analysis.result }}"
          echo "Secret Scanning: ${{ needs.secret-scanning.result }}"
          
          if [[ "${{ needs.build-and-test.result }}" != "success" ]] || \
             [[ "${{ needs.codeql-analysis.result }}" != "success" ]] || \
             [[ "${{ needs.secret-scanning.result }}" != "success" ]]; then
            echo "❌ Security audit failed - check individual job results"
            exit 1
          else
            echo "✅ All security checks passed"
          fi
