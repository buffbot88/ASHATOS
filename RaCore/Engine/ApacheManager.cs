using System.Diagnostics;
using System.Runtime.InteropServices;

namespace RaCore.Engine;

/// <summary>
/// Manages Apache web server configuration and lifecycle for RaCore CMS
/// </summary>
public class ApacheManager
{
    private readonly string _cmsPath;
    private readonly int _port;
    private Process? _apacheProcess;
    
    public ApacheManager(string cmsPath, int port = 8080)
    {
        _cmsPath = cmsPath;
        _port = port;
    }
    
    /// <summary>
    /// Checks if Apache is installed and available
    /// </summary>
    public static bool IsApacheAvailable()
    {
        var apacheCommands = new[] { "apache2", "httpd", "apachectl" };
        
        foreach (var cmd in apacheCommands)
        {
            try
            {
                var startInfo = new ProcessStartInfo
                {
                    FileName = cmd,
                    Arguments = "-v",
                    RedirectStandardOutput = true,
                    RedirectStandardError = true,
                    UseShellExecute = false,
                    CreateNoWindow = true
                };
                
                using var process = Process.Start(startInfo);
                if (process != null)
                {
                    process.WaitForExit(3000);
                    if (process.ExitCode == 0)
                    {
                        return true;
                    }
                }
            }
            catch { continue; }
        }
        
        return false;
    }
    
    /// <summary>
    /// Creates Apache configuration file for the CMS
    /// </summary>
    public void CreateApacheConfig()
    {
        var configDir = Path.Combine(_cmsPath, "apache_conf");
        Directory.CreateDirectory(configDir);
        
        var configPath = Path.Combine(configDir, "racore.conf");
        
        var config = $@"# RaCore CMS Apache Configuration
# Auto-generated by RaCore ApacheManager

<VirtualHost *:{_port}>
    ServerName localhost
    DocumentRoot ""{_cmsPath}""
    
    <Directory ""{_cmsPath}"">
        Options Indexes FollowSymLinks
        AllowOverride All
        Require all granted
        
        # Enable PHP processing
        <FilesMatch \.php$>
            SetHandler application/x-httpd-php
        </FilesMatch>
        
        DirectoryIndex index.php index.html
    </Directory>
    
    # Logging
    ErrorLog ""{{APACHE_LOG_DIR}}/racore_error.log""
    CustomLog ""{{APACHE_LOG_DIR}}/racore_access.log"" combined
    
    # PHP settings
    php_value upload_max_filesize 10M
    php_value post_max_size 10M
    php_value max_execution_time 60
</VirtualHost>
";
        
        File.WriteAllText(configPath, config);
        Console.WriteLine($"[ApacheManager] Apache config created: {configPath}");
    }
    
    /// <summary>
    /// Creates .htaccess file for the CMS directory
    /// </summary>
    public void CreateHtaccess()
    {
        var htaccessPath = Path.Combine(_cmsPath, ".htaccess");
        
        var htaccess = @"# RaCore CMS .htaccess
# Auto-generated by RaCore ApacheManager

# Enable PHP processing
<FilesMatch \.php$>
    SetHandler application/x-httpd-php
</FilesMatch>

# Default document
DirectoryIndex index.php index.html

# Security headers
<IfModule mod_headers.c>
    Header set X-Content-Type-Options ""nosniff""
    Header set X-Frame-Options ""SAMEORIGIN""
    Header set X-XSS-Protection ""1; mode=block""
</IfModule>

# Disable directory listing
Options -Indexes

# Protect sensitive files
<FilesMatch ""(\.sqlite|\.db|\.log)$"">
    Require all denied
</FilesMatch>
";
        
        File.WriteAllText(htaccessPath, htaccess);
        Console.WriteLine($"[ApacheManager] .htaccess created: {htaccessPath}");
    }
    
    /// <summary>
    /// Starts PHP built-in server as fallback if Apache is not available
    /// </summary>
    public bool StartPhpServer(string phpPath)
    {
        try
        {
            Console.WriteLine($"[ApacheManager] Starting PHP built-in server on port {_port}...");
            
            var startInfo = new ProcessStartInfo
            {
                FileName = phpPath,
                Arguments = $"-S localhost:{_port} -t \"{_cmsPath}\"",
                WorkingDirectory = _cmsPath,
                UseShellExecute = false,
                CreateNoWindow = false,
                RedirectStandardOutput = true,
                RedirectStandardError = true
            };
            
            _apacheProcess = Process.Start(startInfo);
            
            if (_apacheProcess != null)
            {
                // Give it a moment to start
                Thread.Sleep(1000);
                
                if (!_apacheProcess.HasExited)
                {
                    Console.WriteLine($"[ApacheManager] PHP server started successfully on http://localhost:{_port}");
                    
                    // Log output asynchronously
                    _ = Task.Run(async () =>
                    {
                        try
                        {
                            while (!_apacheProcess.HasExited)
                            {
                                var output = await _apacheProcess.StandardOutput.ReadLineAsync();
                                if (!string.IsNullOrEmpty(output))
                                {
                                    Console.WriteLine($"[PHP Server] {output}");
                                }
                            }
                        }
                        catch { }
                    });
                    
                    return true;
                }
            }
            
            return false;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"[ApacheManager] Error starting PHP server: {ex.Message}");
            return false;
        }
    }
    
    /// <summary>
    /// Configures Apache to use the CMS directory (Linux/Ubuntu)
    /// </summary>
    public bool ConfigureApache()
    {
        if (!RuntimeInformation.IsOSPlatform(OSPlatform.Linux))
        {
            Console.WriteLine("[ApacheManager] Apache auto-configuration only supported on Linux");
            return false;
        }
        
        try
        {
            CreateApacheConfig();
            CreateHtaccess();
            
            var configPath = Path.Combine(_cmsPath, "apache_conf", "racore.conf");
            
            Console.WriteLine("[ApacheManager] Apache configuration files created");
            Console.WriteLine("[ApacheManager] To enable Apache:");
            Console.WriteLine($"  sudo cp {configPath} /etc/apache2/sites-available/");
            Console.WriteLine($"  sudo a2ensite racore.conf");
            Console.WriteLine($"  sudo systemctl reload apache2");
            Console.WriteLine($"[ApacheManager] Then access CMS at: http://localhost:{_port}");
            
            return true;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"[ApacheManager] Error configuring Apache: {ex.Message}");
            return false;
        }
    }
    
    /// <summary>
    /// Stops the running PHP server
    /// </summary>
    public void Stop()
    {
        if (_apacheProcess != null && !_apacheProcess.HasExited)
        {
            try
            {
                _apacheProcess.Kill();
                _apacheProcess.WaitForExit(5000);
                Console.WriteLine("[ApacheManager] PHP server stopped");
            }
            catch (Exception ex)
            {
                Console.WriteLine($"[ApacheManager] Error stopping PHP server: {ex.Message}");
            }
        }
    }
}
